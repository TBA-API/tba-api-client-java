/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * OpenAPI spec version: 3.04.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.thefletcher.tbaapi.v3client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import net.thefletcher.tbaapi.v3client.model.DistrictList;
import net.thefletcher.tbaapi.v3client.model.Webcast;
import org.threeten.bp.LocalDate;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Event
 */
public class EventTest {
    private final Event model = new Event();

    /**
     * Model tests for Event
     */
    @Test
    public void testEvent() {
        // TODO: test Event
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'eventCode'
     */
    @Test
    public void eventCodeTest() {
        // TODO: test eventCode
    }

    /**
     * Test the property 'eventType'
     */
    @Test
    public void eventTypeTest() {
        // TODO: test eventType
    }

    /**
     * Test the property 'district'
     */
    @Test
    public void districtTest() {
        // TODO: test district
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'stateProv'
     */
    @Test
    public void stateProvTest() {
        // TODO: test stateProv
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'endDate'
     */
    @Test
    public void endDateTest() {
        // TODO: test endDate
    }

    /**
     * Test the property 'year'
     */
    @Test
    public void yearTest() {
        // TODO: test year
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'eventTypeString'
     */
    @Test
    public void eventTypeStringTest() {
        // TODO: test eventTypeString
    }

    /**
     * Test the property 'week'
     */
    @Test
    public void weekTest() {
        // TODO: test week
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'postalCode'
     */
    @Test
    public void postalCodeTest() {
        // TODO: test postalCode
    }

    /**
     * Test the property 'gmapsPlaceId'
     */
    @Test
    public void gmapsPlaceIdTest() {
        // TODO: test gmapsPlaceId
    }

    /**
     * Test the property 'gmapsUrl'
     */
    @Test
    public void gmapsUrlTest() {
        // TODO: test gmapsUrl
    }

    /**
     * Test the property 'lat'
     */
    @Test
    public void latTest() {
        // TODO: test lat
    }

    /**
     * Test the property 'lng'
     */
    @Test
    public void lngTest() {
        // TODO: test lng
    }

    /**
     * Test the property 'locationName'
     */
    @Test
    public void locationNameTest() {
        // TODO: test locationName
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'website'
     */
    @Test
    public void websiteTest() {
        // TODO: test website
    }

    /**
     * Test the property 'firstEventId'
     */
    @Test
    public void firstEventIdTest() {
        // TODO: test firstEventId
    }

    /**
     * Test the property 'firstEventCode'
     */
    @Test
    public void firstEventCodeTest() {
        // TODO: test firstEventCode
    }

    /**
     * Test the property 'webcasts'
     */
    @Test
    public void webcastsTest() {
        // TODO: test webcasts
    }

    /**
     * Test the property 'divisionKeys'
     */
    @Test
    public void divisionKeysTest() {
        // TODO: test divisionKeys
    }

    /**
     * Test the property 'parentEventKey'
     */
    @Test
    public void parentEventKeyTest() {
        // TODO: test parentEventKey
    }

    /**
     * Test the property 'playoffType'
     */
    @Test
    public void playoffTypeTest() {
        // TODO: test playoffType
    }

    /**
     * Test the property 'playoffTypeString'
     */
    @Test
    public void playoffTypeStringTest() {
        // TODO: test playoffTypeString
    }

}
