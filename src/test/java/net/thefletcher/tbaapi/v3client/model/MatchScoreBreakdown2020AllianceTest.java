/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.thefletcher.tbaapi.v3client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;


import org.junit.jupiter.api.Test;


/**
 * Model tests for MatchScoreBreakdown2020Alliance
 */
class MatchScoreBreakdown2020AllianceTest {
    private final MatchScoreBreakdown2020Alliance model = new MatchScoreBreakdown2020Alliance();

    /**
     * Model tests for MatchScoreBreakdown2020Alliance
     */
    @Test
    void testMatchScoreBreakdown2020Alliance() {
        // TODO: test MatchScoreBreakdown2020Alliance
    }

    /**
     * Test the property 'initLineRobot1'
     */
    @Test
    void initLineRobot1Test() {
        // TODO: test initLineRobot1
    }

    /**
     * Test the property 'endgameRobot1'
     */
    @Test
    void endgameRobot1Test() {
        // TODO: test endgameRobot1
    }

    /**
     * Test the property 'initLineRobot2'
     */
    @Test
    void initLineRobot2Test() {
        // TODO: test initLineRobot2
    }

    /**
     * Test the property 'endgameRobot2'
     */
    @Test
    void endgameRobot2Test() {
        // TODO: test endgameRobot2
    }

    /**
     * Test the property 'initLineRobot3'
     */
    @Test
    void initLineRobot3Test() {
        // TODO: test initLineRobot3
    }

    /**
     * Test the property 'endgameRobot3'
     */
    @Test
    void endgameRobot3Test() {
        // TODO: test endgameRobot3
    }

    /**
     * Test the property 'autoCellsBottom'
     */
    @Test
    void autoCellsBottomTest() {
        // TODO: test autoCellsBottom
    }

    /**
     * Test the property 'autoCellsOuter'
     */
    @Test
    void autoCellsOuterTest() {
        // TODO: test autoCellsOuter
    }

    /**
     * Test the property 'autoCellsInner'
     */
    @Test
    void autoCellsInnerTest() {
        // TODO: test autoCellsInner
    }

    /**
     * Test the property 'teleopCellsBottom'
     */
    @Test
    void teleopCellsBottomTest() {
        // TODO: test teleopCellsBottom
    }

    /**
     * Test the property 'teleopCellsOuter'
     */
    @Test
    void teleopCellsOuterTest() {
        // TODO: test teleopCellsOuter
    }

    /**
     * Test the property 'teleopCellsInner'
     */
    @Test
    void teleopCellsInnerTest() {
        // TODO: test teleopCellsInner
    }

    /**
     * Test the property 'stage1Activated'
     */
    @Test
    void stage1ActivatedTest() {
        // TODO: test stage1Activated
    }

    /**
     * Test the property 'stage2Activated'
     */
    @Test
    void stage2ActivatedTest() {
        // TODO: test stage2Activated
    }

    /**
     * Test the property 'stage3Activated'
     */
    @Test
    void stage3ActivatedTest() {
        // TODO: test stage3Activated
    }

    /**
     * Test the property 'stage3TargetColor'
     */
    @Test
    void stage3TargetColorTest() {
        // TODO: test stage3TargetColor
    }

    /**
     * Test the property 'endgameRungIsLevel'
     */
    @Test
    void endgameRungIsLevelTest() {
        // TODO: test endgameRungIsLevel
    }

    /**
     * Test the property 'autoInitLinePoints'
     */
    @Test
    void autoInitLinePointsTest() {
        // TODO: test autoInitLinePoints
    }

    /**
     * Test the property 'autoCellPoints'
     */
    @Test
    void autoCellPointsTest() {
        // TODO: test autoCellPoints
    }

    /**
     * Test the property 'autoPoints'
     */
    @Test
    void autoPointsTest() {
        // TODO: test autoPoints
    }

    /**
     * Test the property 'teleopCellPoints'
     */
    @Test
    void teleopCellPointsTest() {
        // TODO: test teleopCellPoints
    }

    /**
     * Test the property 'controlPanelPoints'
     */
    @Test
    void controlPanelPointsTest() {
        // TODO: test controlPanelPoints
    }

    /**
     * Test the property 'endgamePoints'
     */
    @Test
    void endgamePointsTest() {
        // TODO: test endgamePoints
    }

    /**
     * Test the property 'teleopPoints'
     */
    @Test
    void teleopPointsTest() {
        // TODO: test teleopPoints
    }

    /**
     * Test the property 'shieldOperationalRankingPoint'
     */
    @Test
    void shieldOperationalRankingPointTest() {
        // TODO: test shieldOperationalRankingPoint
    }

    /**
     * Test the property 'shieldEnergizedRankingPoint'
     */
    @Test
    void shieldEnergizedRankingPointTest() {
        // TODO: test shieldEnergizedRankingPoint
    }

    /**
     * Test the property 'tbaShieldEnergizedRankingPointFromFoul'
     */
    @Test
    void tbaShieldEnergizedRankingPointFromFoulTest() {
        // TODO: test tbaShieldEnergizedRankingPointFromFoul
    }

    /**
     * Test the property 'tbaNumRobotsHanging'
     */
    @Test
    void tbaNumRobotsHangingTest() {
        // TODO: test tbaNumRobotsHanging
    }

    /**
     * Test the property 'foulCount'
     */
    @Test
    void foulCountTest() {
        // TODO: test foulCount
    }

    /**
     * Test the property 'techFoulCount'
     */
    @Test
    void techFoulCountTest() {
        // TODO: test techFoulCount
    }

    /**
     * Test the property 'adjustPoints'
     */
    @Test
    void adjustPointsTest() {
        // TODO: test adjustPoints
    }

    /**
     * Test the property 'foulPoints'
     */
    @Test
    void foulPointsTest() {
        // TODO: test foulPoints
    }

    /**
     * Test the property 'rp'
     */
    @Test
    void rpTest() {
        // TODO: test rp
    }

    /**
     * Test the property 'totalPoints'
     */
    @Test
    void totalPointsTest() {
        // TODO: test totalPoints
    }

}
